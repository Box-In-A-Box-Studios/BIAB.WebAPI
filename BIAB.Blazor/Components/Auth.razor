@using BIAB.WebAPI.Shared.Models
@inject AuthorizedHttpClient Http
@inherits AuthorizedComponentBase

@if (!Http.IsAuthorized)
{
    <div class="whole-page">
        @if(loading){
            <h1>Loading...</h1>
        }
        else
        {
            <div class="align-middle justify-content-center text-center" style="margin-top:calc(40vh - 100px); width: 400px; margin-left: calc(50vw - 200px);">
                <div class="row">

                    <h1>Login</h1>
                    <input class="form-control" type="text" @bind="Username"/>
                    <input class="form-control" type="password" @bind="Password"/>
                    <button class="btn btn-primary" @onclick="Login">Login</button>
                    <button class="btn btn-primary" @onclick="Register">Register</button>

                    
                </div>
            </div>
            
        }
    </div>
}

<style>
    .whole-page {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100vw;
        height: 100vh;
        
        justify-content: center;
        align-items: center;
        text-align: center;
        background-color: rgba(0,0,0,0.5);
    }
</style>

@code {
    private bool loading { get; set; } = false;
    private string Username { get; set; } = "";
    private string Password { get; set; } = "";

    private async Task Login()
    {
        loading = true;
        StateHasChanged();
        await Http.AttemptLogin(Username, Password);
        loading = false;
        StateHasChanged();
    }
    
    private async Task Register()
    {
        loading = true;
        StateHasChanged();
        RegisterModel registerModel = new RegisterModel
        {
            Email = Username,
            Password = Password
        };
        await Http.Register(registerModel);
        loading = false;
        StateHasChanged();
    }

    public override Task OnAuthorized()
    {
        StateHasChanged();
        return base.OnAuthorized();
    }

    public override Task OnUnauthorized()
    {
        StateHasChanged();
        return base.OnUnauthorized();
    }

}